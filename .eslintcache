[{"/home/mahaly/Workspace/Web Dev/ghibli-list/src/index.js":"1","/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Header.js":"2","/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Main.js":"3","/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Footer.js":"4","/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Banner.js":"5","/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Card.js":"6","/home/mahaly/Workspace/Web Dev/ghibli-list/src/data.js":"7"},{"size":691,"mtime":1606222133321,"results":"8","hashOfConfig":"9"},{"size":253,"mtime":1606221792867,"results":"10","hashOfConfig":"9"},{"size":687,"mtime":1606233030617,"results":"11","hashOfConfig":"9"},{"size":278,"mtime":1606231008634,"results":"12","hashOfConfig":"9"},{"size":196,"mtime":1606222237574,"results":"13","hashOfConfig":"9"},{"size":2020,"mtime":1606241982788,"results":"14","hashOfConfig":"9"},{"size":5392,"mtime":1606233810141,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10l6r2l",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mahaly/Workspace/Web Dev/ghibli-list/src/index.js",[],"/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Header.js",["31"],"/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Main.js",[],"/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Footer.js",["32"],"/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Banner.js",[],"/home/mahaly/Workspace/Web Dev/ghibli-list/src/components/Card.js",["33"],"import '../style/Card.css';\nimport React from 'react';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isModalOpen: false};\n  }\n\n  handleClickMovie() {\n    this.setState({isModalOpen: true});\n  }\n\n  handleClickClose() {\n    this.setState({isModalOpen: false});\n  }\n\n  render() {\n    let modal;\n    if (this.state.isModalOpen) {\n      modal = (\n        <div className='modal'>\n          <div className='modal-inner'>\n            <div className='modal-introduction'>\n              <div className='modal-img'>\n                <img src={this.props.urlImage}/>\n              </div>\n              <div className='modal-text'>\n                <h2>{this.props.title}</h2>\n                <p>{this.props.date}</p>\n                <br></br>\n                <h2>Synopsis:</h2>\n                <p>{this.props.description}</p>\n                <button className='modal-close-btn' onClick={() => this.handleClickClose()}>close</button>\n              </div>              \n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"card-container\">\n        <div className=\"card-image\" style={{backgroundImage:`url(${this.props.urlImage})`}}>\n        </div>\n        <div className=\"card-text\">\n          <h4>{this.props.title}</h4>\n          <p>{this.props.date}</p>\n        </div>\n        <div className=\"card-button\">\n          <button onClick={() => {this.handleClickMovie()}}>View</button>\n        </div>\n        {modal}\n      </div>\n    );\n  }\n}\n\n// export default Lesson;\n\n// function Card(props) {\n//   return (\n//     <div className=\"card-container\">\n//       <div className=\"card-image\" style={{backgroundImage:`url(${props.urlImage})`}}>\n//       </div>\n//       <div className=\"card-text\">\n//         <h4>{props.title}</h4>\n//         <p>{props.date}</p>\n//       </div>\n//       <div className=\"card-button\">\n//         <button onClick={handleClickMovie}>View</button>\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default Card;\n","/home/mahaly/Workspace/Web Dev/ghibli-list/src/data.js",[],{"ruleId":"34","severity":1,"message":"35","line":7,"column":11,"nodeType":"36","endLine":7,"endColumn":51},{"ruleId":"34","severity":1,"message":"35","line":7,"column":29,"nodeType":"36","endLine":7,"endColumn":57},{"ruleId":"34","severity":1,"message":"35","line":26,"column":17,"nodeType":"36","endLine":26,"endColumn":49},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]